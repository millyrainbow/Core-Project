///////////////////////////////////////////////////////////
/////////////////<Insert Here> CORE///////////////////////
/////////////////////////////////////////////////////////
//                Coded by Emily Mewens               //
///////////////////////////////////////////////////////

string sGroup = "Example Group Name";
//This is the group tag used to talk with all other scripts in the same group. Make sure they all have the same group tag
string sCoreName = "Example Core Name";
//this is what you want your core to be referred to in ownersay and say
string sCall1 = "example call name";
string sCall1C = "Example call name";
string sCall2 = "example call2";
string sCall3 = "example call3";
//These are various calls used in the menus and various says when referring to you. sCall1C is for capital letterings cause im lazy.
string sPro1    =   "example pronoun for it";
string sPro2    =   "example pronoun for its";
//These are for pronouns. Pro1 is for it, he, her, them. Pro2 is for its, his, hers, their.

integer timeset=604800;

string MEN_BLANK    = " ";
//---------------------------------------------//
//Overly Complex system to add the correct number
//of blank spots to a menu
list AddBlank(list lst)
{
    list templist;
    integer num = llGetListLength(lst)%3;

    if     (num == 1){templist += [MEN_BLANK,MEN_BLANK];}
    else if(num == 2){templist += [MEN_BLANK];}

    list bset1 = llList2List(lst,0,2 );
    list bset2 = llList2List(lst,3,5 );
    list bset3 = llList2List(lst,6,8 );
    list bset4 = llList2List(lst,9,11);

    if     (bset2 == []){return bset1+templist;}
    else if(bset3 == []){return bset2+templist+bset1;}
    else if(bset4 == []){return bset3+templist+bset2+bset1;}
    else                {return bset4+templist+bset3+bset2+bset1;}
}


string clockify(integer time){
    integer seconds = time;
    integer minutes = 0;
    integer hours = 0;
    integer days = 0;
    while(seconds > 60){
        seconds -= 60;
        minutes += 1;
    }
    while(minutes > 60){
        minutes -= 60;
        hours+= 1;
    }
    while(hours > 24){
        hours -= 24;
        days+=1;
    }

    string dayString;
    if(days < 10)dayString = "0"+(string)days;
    else dayString = (string)days;
    string hourString;
    if(hours < 10)hourString = "0"+(string)hours;
    else hourString = (string)hours;
    string minuteString;
    if(minutes < 10)minuteString = "0"+(string)minutes;
    else minuteString = (string)minutes;
    string secondString;
    if(seconds < 10)secondString = "0"+(string)seconds;
    else secondString = (string)seconds;
    return dayString+":"+hourString+":"+minuteString+":"+secondString;
}
Say2(string nachos)
{
    string objname = llGetObjectName();
    llSetObjectName(sRenamer);
    llSay(0,nachos);
    llSetObjectName(objname);
}
list MainU(){
    return                   ["RLV"," ","Timer","RLVTog","LockTog","Phrase","OwnerKeys"," ","Close"];
}
list MainE(){
    if(Lock==0){
        return                 [RBlank(rlv)," ",LBlank(tlock)," "," ","Close"];
    }
    else{
        return                  [RBlank(rlv)," ","Timer"," "," ","Close"];
    }
}
list MainM        =          ["RLV","Public Togs","Phrase","Timer","Release","Close"];
list Phrase(){
    return                   [OnOffTog(phrases),"5 min","10 min"," "," ","Back"];
}
list O1Keys         =        ["GiveKeys"," ","Back"];
list Back           =       [" "," ","Back"];
list Doit           =       ["Do it", " ", "Back"];
list PubToggles     =       ["RLVTog","LockTog","Back"];
key Stored_ID;
key TStored_ID;
key Owner_ID;

integer iChan;
integer iBounce;
integer chan1;

integer lockout;
integer Lock;
integer lastUnix;
integer phrases;
integer menu;
//Menu 0-10 = HomeCore
//Menu 11-20 = RLVCore
//Menu 21-30 = Hovercore
//Menu 31-40 = Timercore
integer rlv;
integer tlock;
integer textlockout;
integer owner;

//key Marcella = "1725939c-b807-466c-a163-b0cd447f6670";
//key Marcella = "8df7f681-9ca9-4e38-964a-5f89673d1c7e";
//key Emily = "6198bba5-0235-40a8-b1f5-210ca3ece420";
integer U;
//U = 0: User
//U = 1: Unrelated
//U = 2: Owner


string phrasetime = "10 minutes";
string OnOffTog(integer bool){
    if(bool)return"Off";
    else return"On";
}
string LBlank(integer bool){
    if(bool)return"Timer";
    else return" ";
}
string RBlank(integer bool){
    if(bool)return"RLV";
    else return" ";
}
string RLVTog(integer bool){
    if(bool)return"RLV is currently accessible by everyone but you when locked. To disable this, click Off.";
    else return"RLV is currently inaccessible by anyone. To re-enable this, click On.";
}
string ORLVTog(integer bool){
    if(bool)return"RLV is currently accessible by everyone but your pet when locked. To disable this, click RLVTog.";
    else return"RLV is currently inaccessible by anyone but you. To re-enable this, click RLVTog.";
}
string LTog(integer bool){
    if(bool)return"People will be able to lock you. To disable this, click LockTog";
    else return"Only you will be able to lock yourself. To let others lock you, click LockTog";
}
string OLTog(integer bool){
    if(bool)return"People will be able to lock your pet. To disable this, click LockTog";
    else return"Only you will be able to lock your pet. To let others lock "+sPro1+", click LockTog";
}
UserDiag(){
    llDialog(Stored_ID,"Hello little "+sCall1+"~ This is the main menu for "+sCoreName+".\nClick on the RLV button to set up what RLV you would like to be active. Then click on LOCK to lock yourself in for a set time.\n\n-"+RLVTog(rlv)+"\n\n-"+LTog(tlock),AddBlank(MainU()),iChan);
}
ClikDiag(){
    llDialog(Stored_ID,"This is the "+sCoreName+".\nClick on the RLV button to set up what RLV you would like to be active.",AddBlank(MainE()),iChan);
}
OClikDiag(){
    llDialog(Stored_ID,"Welcome "+llGetDisplayName(Owner_ID)+", if you click on the RLV Button, you may set up what rlv you would like active. \nYou can also lock your "+sCall3+" nice and tightly through Timer~. \nIf you want "+sPro1+" to hear lovely phrases whispering in "+sPro2+" mind while locked, click Phrase.",AddBlank(MainM),iChan);
}
PhraseDiag(){
    llDialog(Stored_ID,"By default, when you are locked, "+sCoreName+" will secretly send messages to you to help you get into the mindset of a good and obedient little "+sCall1+". You can turn it off and on here.\nYou can also set how often the phrases trigger to either 5 or 10 minutes.\nPhrases currently happen every "+phrasetime+"\n\nPhrases are currently "+OnOffTog(!phrases),AddBlank(Phrase()),iChan);
}
OPhraseDiag(){
    llDialog(Stored_ID,"By default, when your pet is locked, "+sCoreName+" will secretly send messages to "+sPro1+" to help "+sPro1+" get into the mindset of a good and obedient little "+sCall1+". You can turn it off and on here.\nYou can also set how often the phrases trigger to either 5 or 10 minutes.\nPhrases currently happen every "+phrasetime+"\n\nPhrases are currently "+OnOffTog(!phrases),AddBlank(Phrase()),iChan);
}
O1KeysDiag(){
    llDialog(Stored_ID,"Hello little "+sCall2+"~ Would you like to be a good toy and give your keys away~ Warning: You'll be giving up access to your lockings entirely~\n\nIf youre sure, please click GiveKeys",AddBlank(O1Keys),iChan);
}
O2KeysDiag(){
    llDialog(Stored_ID, (string)llGetDisplayName(Owner_ID)+" is currently in control of your lockings, little "+(string)sCall1, AddBlank(Back), iChan);
}
PubDiag(){
    llDialog(Stored_ID, "Here you can toggle whats accessible to the everyone aside your pet.\n\n"+ORLVTog(rlv)+"\n\n-"+OLTog(tlock),AddBlank(PubToggles),iChan);
}
MookCheck(){
    Stored_ID = TStored_ID;
    menu=0;
    llSay(iChan,sGroup+" menu 0");
    llSay(iChan,sGroup+" Stored_ID "+(string)Stored_ID);
    lockout=60;
    llSetTimerEvent(1);
    if(TStored_ID==llGetOwner()){
        U=0;
        UserDiag();
    }
    else if(TStored_ID!=llGetOwner()){
        if(TStored_ID==Owner_ID){
            U=2;
            MenuCheck();
        }
        else{
            U=1;
            MenuCheck();
        }
    }
}
MenuCheck(){
    if(U==0){
        UserDiag();
    }
    if(U==1){
        ClikDiag();
    }
    if(U==2){
        OClikDiag();
    }
}
OSay(string sOSay1)
{
    string ObjectName = llGetObjectName();
    llSetObjectName("BunnyCo");
    llOwnerSay(sOSay1);
    llSetObjectName(ObjectName);
}
TRSay(string sRSay1)
{
    string ObjectName = llGetObjectName();
    llSetObjectName("BunnyCo");
    llRegionSayTo(TStored_ID,0,sRSay1);
    llSetObjectName(ObjectName);
}
ORSay(string sRSay1)
{
    string ObjectName = llGetObjectName();
    llSetObjectName("BunnyCo");
    llRegionSayTo(Owner_ID,0,sRSay1);
    llSetObjectName(ObjectName);
}
RSay(string sRSay1)
{
    string ObjectName = llGetObjectName();
    llSetObjectName(sCoreName);
    llRegionSayTo(Stored_ID,0,sRSay1);
    llSetObjectName(ObjectName);
}
string sRenamer;
default
{
    state_entry()
    {
        chan1 = (integer) ("0x"+llGetSubString((string)llGetOwner(), -9, -3));
        iChan = chan1+80;
        iBounce = iChan+7;
        lastUnix=llGetUnixTime();
        llListen(iChan,"","","");
        llListen(iBounce,"","","");
        sRenamer=llGetDisplayName(llGetOwner());
        phrases=1;
        tlock=1;
        lockout=0;
        Stored_ID=NULL_KEY;
    }
    changed(integer change)
    {
        if (change & CHANGED_OWNER) //note that it's & and not &&... it's bitwise!
        {
            llResetScript(); // needs a reset if the owner is changed to ensure that if you give it to someone else the listeners are reset.
        }
    }
    on_rez(integer start_param)
    {
        Stored_ID=NULL_KEY;
        llSleep(15);
        OSay(sCoreName+" Core is Ready");
    }
    touch_start(integer total_number)
    {
        if(Stored_ID!=NULL_KEY){
            if(llDetectedKey(0)!=Stored_ID){
                if(textlockout==2){
                    OSay(llGetDisplayName(Stored_ID)+" is currently changing your name, little "+sCall1+"");
                    return;
                }
                if(textlockout==3){
                    OSay(llGetDisplayName(Stored_ID)+" is currently changing your replacer text, little "+sCall1+"");
                    return;
                }
                if(lockout>0){
                    OSay("Sorry little "+sCall1+", but someone is already playing with your RLV. Try again in a few minutes, if you still can~♥");
                    return;
                }
            }
        }
        if(llDetectedKey(0)==llGetOwner()){
            if(owner==1){
                TRSay("Silly "+sCall2+", you gave up all youre rights to this~♥");
                return;
            }
            if(Lock==0){
                menu=0;
                U=0;
                Stored_ID = llDetectedKey(0);
                llSay(iChan,sGroup+" menu 0");
                llSay(iChan,sGroup+" Stored_ID "+(string)Stored_ID);
                UserDiag();
                lockout=60;
                llSetTimerEvent(1);
            }
            else{
                OSay("Locked little "+sCall1+"s arent allowed to touch "+sPro2+" lockings~♥");
                return;
            }
        }
    }
    listen(integer channel, string name, key id, string msg)
    {
        if(channel==iChan){
            lockout=60;
            if(msg=="Back"){
                if(menu==1||menu==11||menu==31){
                    menu=0;
                    llSay(iChan,sGroup+" menu 0");
                    MenuCheck();
                }
            }
            else if(msg=="Phrase"){
                if(phrases==1){
                    PhraseDiag();
                }
                else if(phrases==0){
                    PhraseDiag();
                }
                llSay(iChan,sGroup+" menu 1");
                menu=1;
            }
            else if(msg=="On"){
                if(menu==1){
                    phrases=1;
                    llSay(iChan,sGroup+" Phrases TRUE");
                    PhraseDiag();
                }
            }
            else if(msg=="Off"){
                if(menu==1){
                    phrases=0;
                    llSay(iChan,sGroup+" Phrases FALSE");
                    PhraseDiag();
                }
            }
            else if(msg=="5 min"){
                phrasetime="5 minutes.";
                PhraseDiag();
            }
            else if(msg=="10 min"){
                phrasetime="10 minutes.";
                PhraseDiag();
            }
            else if(msg=="LockTog"){
                if(tlock==0){
                    tlock=1;
                }
                else if(tlock==1){
                    tlock=0;
                }
                MenuCheck();
            }
            else if(msg=="RLVTog"){
                if(rlv==0){
                    rlv=1;
                }
                else if(rlv==1){
                    rlv=0;
                }
                MenuCheck();
            }
            else if(msg=="OwnerKeys"){
                if(owner==0){
                    O1KeysDiag();
                }
                else if(owner==1){
                    O2KeysDiag();
                }
                llSay(iChan,sGroup+" menu 1");
                menu=1;
            }
            else if(msg=="Public Togs"){
                menu==1;
                llSay(iChan,sGroup+" menu 1");
                PubDiag();
            }
            else if(msg=="Release"){
                menu=1;
                llSay(iChan,sGroup+" menu 1");
                llDialog(Stored_ID, "This will release your control over your pet, are you sure?", AddBlank(Doit), iChan);
                llSetTimerEvent(0);
                lockout=0;
                Stored_ID=NULL_KEY;
            }
            else if(msg=="Do it"){
                menu=0;
                llSay(iChan,sGroup+" menu 0");
                owner=0;
                ORSay(sRenamer+" has been freed");
                OSay(llGetDisplayName(Owner_ID)+" has returned your keys.");
                Owner_ID==NULL_KEY;

            }
            else if(msg=="Close"){
                llSetTimerEvent(0);
                lockout=0;
                Stored_ID=NULL_KEY;
            }
            else{
                list parts= llParseString2List(msg, [" "],[]);
                if(llList2String(parts,0)==sGroup){
                    if(llList2String(parts,1)=="sRenamer"){
                        list parts2 = llDeleteSubList(parts,0,1);
                        sRenamer = llDumpList2String(parts2," ");
                    }
                    else if(llList2String(parts,1)=="menu"){
                        menu=(integer)llList2String(parts,2);
                    }
                    else if(llList2String(parts,1)=="Lockout"){
                        textlockout=(integer)llList2String(parts,2);
                        if(textlockout==9){
                            lockout=0;
                            llSetTimerEvent(0);
                        }
                        else{
                            lockout=300;
                        }
                    }
                    else if(llList2String(parts,1)=="Lock"){
                        Lock=(integer)llList2String(parts,2);
                    }
                    else if(llList2String(parts,1)=="Owner_ID"){
                        list parts2 = llDeleteSubList(parts,0,1);
                        Owner_ID=llDumpList2String(parts2, " ");
                        OSay("You are now owned by "+llGetDisplayName(Owner_ID)+" now, little "+sCall2);
                        owner=1;
                    }
                }
            }
        }
        else if(channel==iBounce){
            list parts= llParseString2List(msg, [" "],[]);
            if(llList2String(parts,1)=="TStored_ID"){
                TStored_ID = llList2String(parts,2);
                if(owner==1){
                    if(TStored_ID==llGetOwner()){
                        TRSay("Silly "+sCall2+", you gave up all youre rights to this~♥");
                        return;
                    }
                }
                if(Stored_ID==NULL_KEY){
                    lockout=0;
                }
                if(TStored_ID!=Stored_ID){
                    if(Lock==1){
                        if(TStored_ID==llGetOwner()){
                            OSay(sCall1C+"s dont get to play with "+sPro2+" own buttons while locked, now be a good "+sCall2+" and keep your hands off it~");
                        }
                    }
                    if(lockout>0){
                        if(TStored_ID==llGetOwner()){
                            OSay("Sorry little "+sCall1+", but someone is already playing with your RLV. Try again in a few minutes, if you still can~♥");
                            return;
                        }
                        if(rlv==1){
                            TRSay("Someone is already playing with the "+sCall1+"'s button, please wait a minute");
                            return;
                        }
                    }
                    else{
                        MookCheck();
                    }
                }
                else{
                    MookCheck();
                }
            }
        }

    }
    timer()
    {
        if(lockout>0){
            lockout--;
        }
        if(lockout<=0){
            RSay("The menu has been shut down due to inactivity.");
            Stored_ID=NULL_KEY;
            llSetTimerEvent(0);
            lockout=0;
        }
    }
}
